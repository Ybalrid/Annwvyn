Directory intended to put some 3D body.

Center (AKA Origin, Pivot point...) of the player's body mesh have to be at the floor between the legs. You have to know the relative Z position of the eyeballs center and that pivot point.

You have to set the "eyes height" parameter of the VirtualBody to match the one of your 3D model

The head is cliped off at reder because being just to close to the camera. This way, we can put rendering cameras at the place of eyes, so it's logical. Note that the camera position will match the eyes in the Y and Z axis but not on X. Inter camera distance is equal to the IPD set on your Oculus Profile.

Optimally, the head have to be inside a sphere of 0.1 unit in radius aroud the center of eyeballs.

The player body has to look to the negative Z direction. You can easily flip it if it looks to the positive axis

Animation :  easy animation handleling will be provided in the future. A set of anims that the body have to be able to perform will be provided

No physics is applied to the player's body mesh. the Virtual body provide a btCapsuleShape for the player (check documentation to see how it looks). It has the player height and a radius of 0.5 metters.

The update routine runned by the engine for displaying the body at the right place is :

1) Align VisualBody with VirtualBody orientation (VB->Orientation->toQuaternion())
2) Calculate the Offset vector for the Visual Body form the eyesHeight and the Z axis offset.
3) Apply Offset vector  translation of the VisualBody from Camera node.

The easy way to get a realistic human body for your application is to generate one from make human, export (mhx) it and open it on blender, figure out the exact height of the center of an eyeball and the Z distance between that point and the origin, export the model to a ".mesh". Load it on your game. Change eyesHeiht parameter befor seting up physics for the player. use the AnnEngine "attachVisualBody" with your .mesh file and the Z offset (and flip = true if needed)
