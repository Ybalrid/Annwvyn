class DummyBehavior2
{
	def DummyBehavior2(ownerTag)
	{
		AnnDebugLog("Dummy Behavior constructed");
	}

	def update()
	{
		//AnnDebugLog("Dummy Behavior updated");
	}

	def KeyEvent(event)
	{
		/*
		AnnDebugLog("Some keyboard event happened");
		AnnDebugLog(event.getKey())//Value is int. The KeyCode::code enum isn't exposed to ChaiScript
		if(event.isPressed())
		{
			AnnDebugLog("Pressed()");
		}
		else if(event.isReleased())//Useless, just to show
		{
			AnnDebugLog("Released()");
		}
		*/
	}

	def MouseEvent(event)
	{
		/*
		AnnDebugLog("Some Mouse event happened");
		//AnnDebugLog("left button")
		AnnDebugLog(event.getButtonState(0));
		//AnnDebugLog("right button")
		AnnDebugLog(event.getButtonState(1));
		//AnnDebugLog("middle mouse button")
		AnnDebugLog(event.getButtonState(2));
		//prev/next and other buttons most mice don't have are accessible too...

		auto x = event.getAxis(0);
		auto y = event.getAxis(1);
		auto z = event.getAxis(2);

		//Horizontal axis, in ints "pixels"
		AnnDebugLog(x.getRelValue());
		//Vertical
		AnnDebugLog(y.getRelValue());
		//Scroll wheel. Not in "lines" as expected, but as +/- 120 pixels
		AnnDebugLog(z.getRelValue());
		*/
	}

	def StickEvent(event)
	{
		/*
		AnnDebugLog("Some Controller event!");
		AnnDebugLog(event.getVendor());

		for(var i = 0; i < event.getNbAxis(); ++i)
		{
			AnnDebugLog(event.getAxis(i).getAbsValue());
		}
		for(var i = 0; i < event.getNbButtons(); ++i)
		{
			AnnDebugLog(event.isDown(i));
		}
		*/
	}

	def PlayerCollisionEvent(event)
	{
		AnnDebugLog(event.getObject().getName());
	}
}
